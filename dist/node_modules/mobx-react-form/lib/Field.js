'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.prototypes = exports.default = undefined;
var _head2 = require('lodash/head');
var _head3 = _interopRequireDefault(_head2);
var _toString2 = require('lodash/toString');
var _toString3 = _interopRequireDefault(_toString2);
var _isPlainObject2 = require('lodash/isPlainObject');
var _isPlainObject3 = _interopRequireDefault(_isPlainObject2);
var _isNil2 = require('lodash/isNil');
var _isNil3 = _interopRequireDefault(_isNil2);
var _isDate2 = require('lodash/isDate');
var _isDate3 = _interopRequireDefault(_isDate2);
var _isBoolean2 = require('lodash/isBoolean');
var _isBoolean3 = _interopRequireDefault(_isBoolean2);
var _isEqual2 = require('lodash/isEqual');
var _isEqual3 = _interopRequireDefault(_isEqual2);
var _isNaN2 = require('lodash/isNaN');
var _isNaN3 = _interopRequireDefault(_isNaN2);
var _toNumber2 = require('lodash/toNumber');
var _toNumber3 = _interopRequireDefault(_toNumber2);
var _split2 = require('lodash/split');
var _split3 = _interopRequireDefault(_split2);
var _endsWith2 = require('lodash/endsWith');
var _endsWith3 = _interopRequireDefault(_endsWith2);
var _isNumber2 = require('lodash/isNumber');
var _isNumber3 = _interopRequireDefault(_isNumber2);
var _isArray2 = require('lodash/isArray');
var _isArray3 = _interopRequireDefault(_isArray2);
var _isString2 = require('lodash/isString');
var _isString3 = _interopRequireDefault(_isString2);
var _isEmpty2 = require('lodash/isEmpty');
var _isEmpty3 = _interopRequireDefault(_isEmpty2);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
        descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
} } return function (Constructor, protoProps, staticProps) { if (protoProps)
    defineProperties(Constructor.prototype, protoProps); if (staticProps)
    defineProperties(Constructor, staticProps); return Constructor; }; }();
var _desc, _value, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _desc2, _value2, _obj;
var _mobx = require('mobx');
var _utils = require('./utils');
var _utils2 = _interopRequireDefault(_utils);
var _Base2 = require('./Base');
var _Base3 = _interopRequireDefault(_Base2);
var _parser = require('./parser');
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _initDefineProp(target, property, descriptor, context) {
    if (!descriptor)
        return;
    Object.defineProperty(target, property, {
        enumerable: descriptor.enumerable,
        configurable: descriptor.configurable,
        writable: descriptor.writable,
        value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
}
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
} }
function _possibleConstructorReturn(self, call) { if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
} return call && (typeof call === "object" || typeof call === "function") ? call : self; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
} subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;
    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }
    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);
    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }
    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }
    return desc;
}
function _initializerWarningHelper(descriptor, context) {
    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
}
var Field = (_class = function (_Base) {
    _inherits(Field, _Base);
    function Field(_ref) {
        var key = _ref.key, path = _ref.path, _ref$data = _ref.data, data = _ref$data === undefined ? {} : _ref$data, _ref$props = _ref.props, props = _ref$props === undefined ? {} : _ref$props, _ref$update = _ref.update, update = _ref$update === undefined ? false : _ref$update, state = _ref.state;
        _classCallCheck(this, Field);
        var _this = _possibleConstructorReturn(this, (Field.__proto__ || Object.getPrototypeOf(Field)).call(this));
        _this.fields = _mobx.observable.map ? _mobx.observable.map({}) : (0, _mobx.asMap)({});
        _this.incremental = false;
        _this.isField = true;
        _initDefineProp(_this, '$value', _descriptor, _this);
        _initDefineProp(_this, '$label', _descriptor2, _this);
        _initDefineProp(_this, '$placeholder', _descriptor3, _this);
        _initDefineProp(_this, '$default', _descriptor4, _this);
        _initDefineProp(_this, '$initial', _descriptor5, _this);
        _initDefineProp(_this, '$bindings', _descriptor6, _this);
        _initDefineProp(_this, '$type', _descriptor7, _this);
        _initDefineProp(_this, '$disabled', _descriptor8, _this);
        _initDefineProp(_this, '$focus', _descriptor9, _this);
        _initDefineProp(_this, '$touched', _descriptor10, _this);
        _initDefineProp(_this, '$changed', _descriptor11, _this);
        _initDefineProp(_this, 'showError', _descriptor12, _this);
        _initDefineProp(_this, 'errorSync', _descriptor13, _this);
        _initDefineProp(_this, 'errorAsync', _descriptor14, _this);
        _initDefineProp(_this, 'validationErrorStack', _descriptor15, _this);
        _initDefineProp(_this, 'validationFunctionsData', _descriptor16, _this);
        _initDefineProp(_this, 'validationAsyncData', _descriptor17, _this);
        _this.sync = (0, _mobx.action)(function (e) {
            _this.$changed = true;
            if ((0, _isNil3.default)(e.target)) {
                _this.value = e;
                return;
            }
            if ((0, _isBoolean3.default)(_this.$value) && (0, _isBoolean3.default)(e.target.checked)) {
                _this.value = e.target.checked;
                return;
            }
            _this.value = e.target.value;
        });
        _this.onChange = _this.sync;
        _this.onToggle = _this.sync;
        _this.onFocus = (0, _mobx.action)(function () {
            _this.$focus = true;
            _this.$touched = true;
        });
        _this.onBlur = (0, _mobx.action)(function () {
            _this.$focus = false;
        });
        _this.state = state;
        _this.setupField(key, path, data, props, update);
        _this.initNestedFields(data, update);
        _this.incremental = _this.hasIncrementalNestedFields !== 0;
        _this.observe();
        return _this;
    }
    _createClass(Field, [{
            key: 'checkValidationErrors',
            get: function get() {
                return this.validationAsyncData.valid === false && !(0, _isEmpty3.default)(this.validationAsyncData) || !(0, _isEmpty3.default)(this.validationErrorStack) || (0, _isString3.default)(this.errorAsync) || (0, _isString3.default)(this.errorSync);
            }
        }, {
            key: 'hasIncrementalNestedFields',
            get: function get() {
                return _utils2.default.hasIntKeys(this.fields) && this.fields.size;
            }
        }, {
            key: 'hasNestedFields',
            get: function get() {
                return this.fields.size !== 0;
            }
        }, {
            key: 'value',
            get: function get() {
                if (this.incremental || this.hasNestedFields) {
                    var value = this.get('value');
                    return !(0, _isEmpty3.default)(value) ? value : [];
                }
                if ((0, _isArray3.default)(this.$value) || (0, _mobx.isObservableArray)(this.$value)) {
                    return [].slice.call(this.$value);
                }
                return (0, _mobx.toJS)(this.$value);
            },
            set: function set(newVal) {
                if (this.$value === newVal)
                    return;
                if (this.state.options.get('autoParseNumbers') === true) {
                    if ((0, _isNumber3.default)(this.$initial)) {
                        if (!(0, _endsWith3.default)(newVal, '.') && !(0, _endsWith3.default)((0, _split3.default)(newVal, '.', 2)[1], '0')) {
                            var numericVal = (0, _toNumber3.default)(newVal);
                            if (!(0, _isString3.default)(numericVal) && !(0, _isNaN3.default)(numericVal)) {
                                this.$value = numericVal;
                                return;
                            }
                        }
                    }
                }
                this.$value = newVal;
            }
        }, {
            key: 'initial',
            get: function get() {
                return (0, _mobx.toJS)(this.$initial);
            },
            set: function set(val) {
                this.$initial = (0, _parser.parseInitialValue)({ separated: val });
            }
        }, {
            key: 'default',
            get: function get() {
                return (0, _mobx.toJS)(this.$default);
            },
            set: function set(val) {
                this.$default = (0, _parser.parseDefaultValue)({ separated: val });
            }
        }, {
            key: 'label',
            get: function get() {
                return (0, _parser.parseGetLabel)(this.$label);
            }
        }, {
            key: 'placeholder',
            get: function get() {
                return this.$placeholder;
            }
        }, {
            key: 'options',
            get: function get() {
                return this.$options;
            }
        }, {
            key: 'bindings',
            get: function get() {
                return this.$bindings;
            }
        }, {
            key: 'type',
            get: function get() {
                return this.$type;
            }
        }, {
            key: 'related',
            get: function get() {
                return this.$related;
            }
        }, {
            key: 'disabled',
            get: function get() {
                return this.$disabled;
            }
        }, {
            key: 'rules',
            get: function get() {
                return this.$rules;
            }
        }, {
            key: 'validators',
            get: function get() {
                return this.$validate;
            }
        }, {
            key: 'error',
            get: function get() {
                if (this.showError === false)
                    return null;
                return this.errorAsync || this.errorSync;
            }
        }, {
            key: 'hasError',
            get: function get() {
                return this.checkValidationErrors || this.check('hasError', true);
            }
        }, {
            key: 'isValid',
            get: function get() {
                return !this.checkValidationErrors && this.check('isValid', true);
            }
        }, {
            key: 'isDirty',
            get: function get() {
                return this.hasNestedFields ? this.check('isDirty', true) : !(0, _isEqual3.default)(this.$default, this.value);
            }
        }, {
            key: 'isPristine',
            get: function get() {
                return this.hasNestedFields ? this.check('isPristine', true) : (0, _isEqual3.default)(this.$default, this.value);
            }
        }, {
            key: 'isDefault',
            get: function get() {
                return this.hasNestedFields ? this.check('isDefault', true) : (0, _isEqual3.default)(this.$default, this.value);
            }
        }, {
            key: 'isEmpty',
            get: function get() {
                if (this.hasNestedFields)
                    return this.check('isEmpty', true);
                if ((0, _isBoolean3.default)(this.value))
                    return !!this.$value;
                if ((0, _isNumber3.default)(this.value))
                    return false;
                if ((0, _isDate3.default)(this.value))
                    return false;
                return (0, _isEmpty3.default)(this.value);
            }
        }, {
            key: 'focus',
            get: function get() {
                return this.hasNestedFields ? this.check('focus', true) : this.$focus;
            }
        }, {
            key: 'touched',
            get: function get() {
                return this.hasNestedFields ? this.check('touched', true) : this.$touched;
            }
        }, {
            key: 'changed',
            get: function get() {
                return this.hasNestedFields ? this.check('changed', true) : this.$changed;
            }
        }]);
    return Field;
}(_Base3.default), (_descriptor = _applyDecoratedDescriptor(_class.prototype, '$value', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return undefined;
    }
}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, '$label', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return undefined;
    }
}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, '$placeholder', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return undefined;
    }
}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, '$default', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return undefined;
    }
}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, '$initial', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return undefined;
    }
}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, '$bindings', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return undefined;
    }
}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, '$type', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return undefined;
    }
}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, '$disabled', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return false;
    }
}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, '$focus', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return false;
    }
}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, '$touched', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return false;
    }
}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, '$changed', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return false;
    }
}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, 'showError', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return true;
    }
}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, 'errorSync', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return null;
    }
}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, 'errorAsync', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return null;
    }
}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, 'validationErrorStack', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return [];
    }
}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, 'validationFunctionsData', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return [];
    }
}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, 'validationAsyncData', [_mobx.observable], {
    enumerable: true,
    initializer: function initializer() {
        return {};
    }
}), _applyDecoratedDescriptor(_class.prototype, 'checkValidationErrors', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'checkValidationErrors'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'hasIncrementalNestedFields', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'hasIncrementalNestedFields'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'hasNestedFields', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'hasNestedFields'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'value', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'value'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'initial', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'initial'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'default', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'default'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'label', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'label'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'placeholder', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'placeholder'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'options', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'options'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'bindings', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'bindings'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'type', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'type'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'related', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'related'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'disabled', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'disabled'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'rules', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'rules'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'validators', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'validators'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'error', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'error'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'hasError', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'hasError'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'isValid', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'isValid'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'isDirty', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'isDirty'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'isPristine', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'isPristine'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'isDefault', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'isDefault'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'isEmpty', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'isEmpty'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'focus', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'focus'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'touched', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'touched'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'changed', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'changed'), _class.prototype)), _class);
exports.default = Field;
var prototypes = exports.prototypes = (_obj = {
    setupField: function setupField($key, $path, $data, $props, update) {
        this.key = $key;
        this.path = $path;
        this.id = _utils2.default.makeId(this.path);
        var _$props$$value = $props.$value, $value = _$props$$value === undefined ? null : _$props$$value, _$props$$label = $props.$label, $label = _$props$$label === undefined ? null : _$props$$label, _$props$$placeholder = $props.$placeholder, $placeholder = _$props$$placeholder === undefined ? null : _$props$$placeholder, _$props$$default = $props.$default, $default = _$props$$default === undefined ? null : _$props$$default, _$props$$disabled = $props.$disabled, $disabled = _$props$$disabled === undefined ? null : _$props$$disabled, _$props$$bindings = $props.$bindings, $bindings = _$props$$bindings === undefined ? null : _$props$$bindings, _$props$$type = $props.$type, $type = _$props$$type === undefined ? null : _$props$$type, _$props$$options = $props.$options, $options = _$props$$options === undefined ? null : _$props$$options, _$props$$related = $props.$related, $related = _$props$$related === undefined ? null : _$props$$related, _$props$$validate = $props.$validate, $validate = _$props$$validate === undefined ? null : _$props$$validate, _$props$$rules = $props.$rules, $rules = _$props$$rules === undefined ? null : _$props$$rules;
        if ((0, _isNil3.default)($data))
            $data = '';
        if ((0, _isPlainObject3.default)($data)) {
            var _$data = $data, value = _$data.value, name = _$data.name, label = _$data.label, placeholder = _$data.placeholder, disabled = _$data.disabled, bindings = _$data.bindings, type = _$data.type, options = _$data.options, related = _$data.related, validate = _$data.validate, rules = _$data.rules;
            this.$initial = (0, _parser.parseInitialValue)({
                unified: value,
                separated: $value
            });
            this.$default = (0, _parser.parseDefaultValue)({
                unified: update ? '' : $data.default,
                separated: $default,
                initial: this.$initial
            });
            this.name = (0, _toString3.default)(name || $key);
            this.$value = this.$initial;
            this.$label = $label || label || this.name;
            this.$placeholder = $placeholder || placeholder || '';
            this.$disabled = $disabled || disabled || false;
            this.$bindings = $bindings || bindings || 'default';
            this.$type = $type || type || 'text';
            this.$options = $options || options || null;
            this.$related = $related || related || [];
            this.$validate = (0, _mobx.toJS)($validate || validate || null);
            this.$rules = $rules || rules || null;
            return;
        }
        this.name = (0, _toString3.default)($key);
        this.$initial = (0, _parser.parseInitialValue)({
            unified: $data,
            separated: $value
        });
        this.$default = (0, _parser.parseDefaultValue)({
            unified: update ? '' : $data.default,
            separated: $default,
            initial: this.$initial
        });
        this.$value = this.$initial;
        this.$label = $label || this.name;
        this.$placeholder = $placeholder || '';
        this.$disabled = $disabled || false;
        this.$bindings = $bindings || 'default';
        this.$type = $type || 'text';
        this.$options = $options || null;
        this.$related = $related || [];
        this.$validate = (0, _mobx.toJS)($validate || null);
        this.$rules = $rules || null;
    },
    initNestedFields: function initNestedFields(field, update) {
        var fields = (0, _isNil3.default)(field) ? '' : field.fields;
        this.initFields({ fields: fields }, update);
    },
    observe: function observe() {
        var _this2 = this;
        if (this.state.options.get('validateOnChange') === false)
            return;
        (0, _mobx.observe)(this, '$value', function () {
            return _this2.validate();
        });
    },
    validate: function validate() {
        return this.state.form.validate({
            path: this.path,
            field: this,
            showErrors: true,
            related: true
        });
    },
    invalidate: function invalidate(message) {
        var async = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        if (async === true) {
            this.errorAsync = message;
            return;
        }
        if ((0, _isArray3.default)(message)) {
            this.validationErrorStack = message;
            this.showErrors(true);
            return;
        }
        this.validationErrorStack.unshift(message);
        this.showErrors(true);
    },
    setValidationAsyncData: function setValidationAsyncData() {
        var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        this.validationAsyncData = obj;
    },
    resetValidation: function resetValidation() {
        var deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        this.showError = true;
        this.errorSync = null;
        this.errorAsync = null;
        this.validationAsyncData = {};
        this.validationFunctionsData = [];
        this.validationErrorStack = [];
        if (deep)
            this.deepAction('resetValidation', this.fields);
    },
    clear: function clear() {
        var deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
        this.showErrors(false);
        if ((0, _isArray3.default)(this.$value))
            this.$value = [];
        if ((0, _isDate3.default)(this.$value))
            this.$value = null;
        if ((0, _isBoolean3.default)(this.$value))
            this.$value = false;
        if ((0, _isNumber3.default)(this.$value))
            this.$value = 0;
        if ((0, _isString3.default)(this.$value))
            this.$value = '';
        if (deep && this.fields.size) {
            this.deepAction('clear', this.fields);
        }
    },
    reset: function reset() {
        var deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
        var useDefaultValue = this.$default !== this.$initial;
        if (useDefaultValue)
            this.value = this.$default;
        if (!useDefaultValue)
            this.value = this.$initial;
        if (deep && this.fields.size) {
            this.deepAction('reset', this.fields);
        }
    },
    showErrors: function showErrors() {
        var _showErrors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
        this.showError = _showErrors;
        this.errorSync = (0, _head3.default)(this.validationErrorStack);
    },
    showAsyncErrors: function showAsyncErrors() {
        if (this.validationAsyncData.valid === false) {
            this.errorAsync = this.validationAsyncData.message;
            return;
        }
        this.errorAsync = null;
    },
    bind: function bind() {
        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        return this.state.bindings.load(this, this.bindings, props);
    }
}, (_applyDecoratedDescriptor(_obj, 'setupField', [_mobx.action], Object.getOwnPropertyDescriptor(_obj, 'setupField'), _obj), _applyDecoratedDescriptor(_obj, 'initNestedFields', [_mobx.action], Object.getOwnPropertyDescriptor(_obj, 'initNestedFields'), _obj), _applyDecoratedDescriptor(_obj, 'invalidate', [_mobx.action], Object.getOwnPropertyDescriptor(_obj, 'invalidate'), _obj), _applyDecoratedDescriptor(_obj, 'setValidationAsyncData', [_mobx.action], Object.getOwnPropertyDescriptor(_obj, 'setValidationAsyncData'), _obj), _applyDecoratedDescriptor(_obj, 'resetValidation', [_mobx.action], Object.getOwnPropertyDescriptor(_obj, 'resetValidation'), _obj), _applyDecoratedDescriptor(_obj, 'clear', [_mobx.action], Object.getOwnPropertyDescriptor(_obj, 'clear'), _obj), _applyDecoratedDescriptor(_obj, 'reset', [_mobx.action], Object.getOwnPropertyDescriptor(_obj, 'reset'), _obj), _applyDecoratedDescriptor(_obj, 'showErrors', [_mobx.action], Object.getOwnPropertyDescriptor(_obj, 'showErrors'), _obj), _applyDecoratedDescriptor(_obj, 'showAsyncErrors', [_mobx.action], Object.getOwnPropertyDescriptor(_obj, 'showAsyncErrors'), _obj)), _obj);
//# sourceMappingURL=Field.js.map