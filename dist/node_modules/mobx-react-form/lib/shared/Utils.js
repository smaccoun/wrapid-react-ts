'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _trimEnd2 = require('lodash/trimEnd');
var _trimEnd3 = _interopRequireDefault(_trimEnd2);
var _each2 = require('lodash/each');
var _each3 = _interopRequireDefault(_each2);
var _isNil2 = require('lodash/isNil');
var _isNil3 = _interopRequireDefault(_isNil2);
var _head2 = require('lodash/head');
var _head3 = _interopRequireDefault(_head2);
var _split2 = require('lodash/split');
var _split3 = _interopRequireDefault(_split2);
var _utils = require('../utils');
var _utils2 = _interopRequireDefault(_utils);
var _parser = require('../parser');
var _parser2 = _interopRequireDefault(_parser);
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
exports.default = {
    select: function select(path) {
        var fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        var isStrict = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
        var $path = _parser2.default.parsePath(path);
        var keys = (0, _split3.default)($path, '.');
        var head = (0, _head3.default)(keys);
        keys.shift();
        var $fields = (0, _isNil3.default)(fields) ? this.fields.get(head) : fields.get(head);
        var stop = false;
        (0, _each3.default)(keys, function ($key) {
            if (stop)
                return;
            if ((0, _isNil3.default)($fields)) {
                $fields = undefined;
                stop = true;
            }
            else {
                $fields = $fields.fields.get($key);
            }
        });
        if (isStrict)
            _utils2.default.throwError(path, $fields);
        return $fields;
    },
    container: function container() {
        var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
        var $path = path || this.path || '';
        var cpath = (0, _trimEnd3.default)($path.replace(new RegExp('/[^./]+$/'), ''), '.');
        return this.select(cpath, null, false);
    },
    forEach: function forEach(iteratee) {
        var _this = this;
        var fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
        var $fields = fields || this.fields;
        (0, _each3.default)($fields.values(), function (field, index) {
            iteratee(field, index, depth);
            if (field.fields.size !== 0) {
                _this.forEach(iteratee, field.fields, depth + 1);
            }
        });
    }
};
module.exports = exports['default'];
//# sourceMappingURL=Utils.js.map